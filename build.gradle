buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.5"
    }
}
apply plugin: "com.gradle.plugin-publish"
apply plugin: 'java-gradle-plugin'
apply plugin: 'groovy'

group 'net.ltgt.gradle'

sourceCompatibility = targetCompatibility = 1.7

if (JavaVersion.current().isJava9Compatible()) {
    tasks.withType(JavaCompile).all { options.compilerArgs.addAll(['-release', '7']) }
    tasks.withType(GroovyCompile).all { options.compilerArgs.addAll(['-release', '7']) }
}
gradle.taskGraph.whenReady { graph ->
    if (graph.hasTask(publishPlugins)) {
        assert JavaVersion.current().isJava7() || JavaVersion.current().isJava9Compatible() : "Releases must be built with JDK 7 or JDK 9 (make sure to clean and rebuild after changing JDK)"

        assert 'git diff --quiet --exit-code'.execute(null, rootDir).waitFor() == 0 : "Working tree is dirty"
        def process ='git describe --exact-match'.execute(null, rootDir)
        assert process.waitFor() == 0 : "Version is not tagged"
        version = process.text.trim() - ~'^v'
    }
}

repositories {
    jcenter()
}
dependencies {
    compile gradleApi()

    testCompile localGroovy()
    testCompile 'com.netflix.nebula:nebula-test:4.0.0'
    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude group: 'org.codehaus.groovy'
    }
    testCompile gradleTestKit()
}

wrapper {
  gradleVersion = "3.0"
}

test {
    inputs.file tasks.jar
    systemProperty("plugin", tasks.jar.archivePath)
    if (project.hasProperty("test.gradle-versions")) {
        systemProperty("test.gradle-versions", project.property("test.gradle-versions"))
    }
    testLogging {
        showExceptions = true
        showStackTraces = true
        exceptionFormat = 'FULL'
    }
}

pluginBundle {
    website = 'https://github.com/tbroyer/gradle-errorprone-plugin'
    vcsUrl = 'https://github.com/tbroyer/gradle-errorprone-plugin'
    description = 'Gradle plugin to use the error-prone compiler for Java'
    tags = [ 'javac', 'error-prone' ]

    plugins {
        aptPlugin {
            id = 'net.ltgt.errorprone'
            displayName = 'Gradle error-prone plugin'
        }
    }

    mavenCoordinates {
        groupId = project.group
        artifactId = project.name
    }
}
